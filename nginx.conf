
user  www www;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #设置lua缓存 on | off ,product应该开启	
    lua_code_cache on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

	location /hello { 
      		default_type 'text/plain'; 
      		content_by_lua 'ngx.say("hello, lua")'; 
	}

      	location  /wapvideo {
		set $debug 0;			#debug参数 0:正式 1:debug
		set $confusetime 1;		#路径MD5混淆策略1 0:不使用 1:每小时 2:每天 3:每月
		set $confusetype 0;		#路径MD5混淆策略2 0:不加入文件名混淆 1:加入文件名混淆
		set $confusetext "ASD!@Essdf3";	#混淆码
		set $filefolder "wapvideo";	#虚拟文件目录名

		# 0:混淆验证失败 1:混淆验证成功 2:不需要混淆
		set_by_lua_file $check /home/antitheftchain.lua 
			$debug $confusetime $confusetype $confusetext $filefolder;
			
		#echo "foo = [$check]";    

		if ($check = 2)
		{
			rewrite ^/wapvideo/(.*)$ "/video/$1" last;
		}
                if ($check = 1)
                {
                        rewrite ^/wapvideo/(\\w*)/(.*)$ "/video/$2" last;
                }
                if ($check = 0)
                {
                        rewrite ^/?(.*)$ "/404.html" last;
                } 
        }

	location  /video/ {
              	alias   /home/video/;
             	internal;             #阻止外部直接访问
     	}


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
